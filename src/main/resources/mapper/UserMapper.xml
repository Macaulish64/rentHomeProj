<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rent.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.rent.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 25 13:12:59 CST 2018.
    -->
    <id column="userId" jdbcType="INTEGER" property="userid" />
    <result column="userNickName" jdbcType="VARCHAR" property="usernickname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="userType" jdbcType="INTEGER" property="usertype" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="cardType" jdbcType="INTEGER" property="cardtype" />
    <result column="idNumber" jdbcType="VARCHAR" property="idnumber" />
    <result column="phoneNumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="userLevel" jdbcType="INTEGER" property="userlevel" />
    <result column="registCity" jdbcType="VARCHAR" property="registcity" />
    <result column="updateTime" jdbcType="VARCHAR" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 25 13:12:59 CST 2018.
    -->
    userId, userNickName, password, userType, userName, cardType, idNumber, phoneNumber, 
    userLevel, registCity, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 25 13:12:59 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 25 13:12:59 CST 2018.
    -->
    delete from user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rent.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 25 13:12:59 CST 2018.
    -->
    insert into user (userId, userNickName, password, 
      userType, userName, cardType, 
      idNumber, phoneNumber, userLevel, 
      registCity, updateTime)
    values (#{userid,jdbcType=INTEGER}, #{usernickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{usertype,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{cardtype,jdbcType=INTEGER}, 
      #{idnumber,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, #{userlevel,jdbcType=INTEGER}, 
      #{registcity,jdbcType=VARCHAR}, #{updatetime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.rent.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 25 13:12:59 CST 2018.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="usernickname != null">
        userNickName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="usertype != null">
        userType,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="cardtype != null">
        cardType,
      </if>
      <if test="idnumber != null">
        idNumber,
      </if>
      <if test="phonenumber != null">
        phoneNumber,
      </if>
      <if test="userlevel != null">
        userLevel,
      </if>
      <if test="registcity != null">
        registCity,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="usernickname != null">
        #{usernickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="cardtype != null">
        #{cardtype,jdbcType=INTEGER},
      </if>
      <if test="idnumber != null">
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="userlevel != null">
        #{userlevel,jdbcType=INTEGER},
      </if>
      <if test="registcity != null">
        #{registcity,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rent.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 25 13:12:59 CST 2018.
    -->
    update user
    <set>
      <if test="usernickname != null">
        userNickName = #{usernickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        userType = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="cardtype != null">
        cardType = #{cardtype,jdbcType=INTEGER},
      </if>
      <if test="idnumber != null">
        idNumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="userlevel != null">
        userLevel = #{userlevel,jdbcType=INTEGER},
      </if>
      <if test="registcity != null">
        registCity = #{registcity,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rent.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 25 13:12:59 CST 2018.
    -->
    update user
    set userNickName = #{usernickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      userType = #{usertype,jdbcType=INTEGER},
      userName = #{username,jdbcType=VARCHAR},
      cardType = #{cardtype,jdbcType=INTEGER},
      idNumber = #{idnumber,jdbcType=VARCHAR},
      phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      userLevel = #{userlevel,jdbcType=INTEGER},
      registCity = #{registcity,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <!-- 目的：为dao接口方法提供sql语句配置 -->
  <!-- 具体的sql -->
  <insert id="addUser">
      insert into User(userNickName, password,
                       userType, userName, cardType,
                       idNumber, phoneNumber, userLevel,
                       registCity, updateTime)
          values (
                  #{userNickName},#{password},
                  #{userType},#{userName},#{cardType},
                  #{idNumber},#{phoneNumber},#{userLevel},
                  #{registCity},#{updateTime}
          );
  </insert>

    <select id="queryUserById" resultType="User">
        select *
        from User
        where userId=#{userId};
    </select>

    <select id="loginUser" resultType="User">
            select *
            from User
            where userId=#{userId} and password=#{password};
    </select>

    <update id="updateUser">
        update User
        SET password=#{password} , phoneNumber=#{phoneNumber} ,updateTime=#{updateTime}
        where userId=#{userId} ;
    </update>
</mapper>