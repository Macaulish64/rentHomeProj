package com.rent.entity;

import java.util.ArrayList;
import java.util.List;

public class IncomeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public IncomeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMonthIsNull() {
            addCriterion("month is null");
            return (Criteria) this;
        }

        public Criteria andMonthIsNotNull() {
            addCriterion("month is not null");
            return (Criteria) this;
        }

        public Criteria andMonthEqualTo(String value) {
            addCriterion("month =", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotEqualTo(String value) {
            addCriterion("month <>", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthGreaterThan(String value) {
            addCriterion("month >", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthGreaterThanOrEqualTo(String value) {
            addCriterion("month >=", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthLessThan(String value) {
            addCriterion("month <", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthLessThanOrEqualTo(String value) {
            addCriterion("month <=", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthLike(String value) {
            addCriterion("month like", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotLike(String value) {
            addCriterion("month not like", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthIn(List<String> values) {
            addCriterion("month in", values, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotIn(List<String> values) {
            addCriterion("month not in", values, "month");
            return (Criteria) this;
        }

        public Criteria andMonthBetween(String value1, String value2) {
            addCriterion("month between", value1, value2, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotBetween(String value1, String value2) {
            addCriterion("month not between", value1, value2, "month");
            return (Criteria) this;
        }

        public Criteria andAreaIsNull() {
            addCriterion("area is null");
            return (Criteria) this;
        }

        public Criteria andAreaIsNotNull() {
            addCriterion("area is not null");
            return (Criteria) this;
        }

        public Criteria andAreaEqualTo(String value) {
            addCriterion("area =", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotEqualTo(String value) {
            addCriterion("area <>", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThan(String value) {
            addCriterion("area >", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThanOrEqualTo(String value) {
            addCriterion("area >=", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLessThan(String value) {
            addCriterion("area <", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLessThanOrEqualTo(String value) {
            addCriterion("area <=", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLike(String value) {
            addCriterion("area like", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotLike(String value) {
            addCriterion("area not like", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaIn(List<String> values) {
            addCriterion("area in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotIn(List<String> values) {
            addCriterion("area not in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaBetween(String value1, String value2) {
            addCriterion("area between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotBetween(String value1, String value2) {
            addCriterion("area not between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andTransactionnumIsNull() {
            addCriterion("transactionNum is null");
            return (Criteria) this;
        }

        public Criteria andTransactionnumIsNotNull() {
            addCriterion("transactionNum is not null");
            return (Criteria) this;
        }

        public Criteria andTransactionnumEqualTo(Integer value) {
            addCriterion("transactionNum =", value, "transactionnum");
            return (Criteria) this;
        }

        public Criteria andTransactionnumNotEqualTo(Integer value) {
            addCriterion("transactionNum <>", value, "transactionnum");
            return (Criteria) this;
        }

        public Criteria andTransactionnumGreaterThan(Integer value) {
            addCriterion("transactionNum >", value, "transactionnum");
            return (Criteria) this;
        }

        public Criteria andTransactionnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("transactionNum >=", value, "transactionnum");
            return (Criteria) this;
        }

        public Criteria andTransactionnumLessThan(Integer value) {
            addCriterion("transactionNum <", value, "transactionnum");
            return (Criteria) this;
        }

        public Criteria andTransactionnumLessThanOrEqualTo(Integer value) {
            addCriterion("transactionNum <=", value, "transactionnum");
            return (Criteria) this;
        }

        public Criteria andTransactionnumIn(List<Integer> values) {
            addCriterion("transactionNum in", values, "transactionnum");
            return (Criteria) this;
        }

        public Criteria andTransactionnumNotIn(List<Integer> values) {
            addCriterion("transactionNum not in", values, "transactionnum");
            return (Criteria) this;
        }

        public Criteria andTransactionnumBetween(Integer value1, Integer value2) {
            addCriterion("transactionNum between", value1, value2, "transactionnum");
            return (Criteria) this;
        }

        public Criteria andTransactionnumNotBetween(Integer value1, Integer value2) {
            addCriterion("transactionNum not between", value1, value2, "transactionnum");
            return (Criteria) this;
        }

        public Criteria andFeeincomeIsNull() {
            addCriterion("feeIncome is null");
            return (Criteria) this;
        }

        public Criteria andFeeincomeIsNotNull() {
            addCriterion("feeIncome is not null");
            return (Criteria) this;
        }

        public Criteria andFeeincomeEqualTo(Float value) {
            addCriterion("feeIncome =", value, "feeincome");
            return (Criteria) this;
        }

        public Criteria andFeeincomeNotEqualTo(Float value) {
            addCriterion("feeIncome <>", value, "feeincome");
            return (Criteria) this;
        }

        public Criteria andFeeincomeGreaterThan(Float value) {
            addCriterion("feeIncome >", value, "feeincome");
            return (Criteria) this;
        }

        public Criteria andFeeincomeGreaterThanOrEqualTo(Float value) {
            addCriterion("feeIncome >=", value, "feeincome");
            return (Criteria) this;
        }

        public Criteria andFeeincomeLessThan(Float value) {
            addCriterion("feeIncome <", value, "feeincome");
            return (Criteria) this;
        }

        public Criteria andFeeincomeLessThanOrEqualTo(Float value) {
            addCriterion("feeIncome <=", value, "feeincome");
            return (Criteria) this;
        }

        public Criteria andFeeincomeIn(List<Float> values) {
            addCriterion("feeIncome in", values, "feeincome");
            return (Criteria) this;
        }

        public Criteria andFeeincomeNotIn(List<Float> values) {
            addCriterion("feeIncome not in", values, "feeincome");
            return (Criteria) this;
        }

        public Criteria andFeeincomeBetween(Float value1, Float value2) {
            addCriterion("feeIncome between", value1, value2, "feeincome");
            return (Criteria) this;
        }

        public Criteria andFeeincomeNotBetween(Float value1, Float value2) {
            addCriterion("feeIncome not between", value1, value2, "feeincome");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rentsystem..income
     *
     * @mbggenerated do_not_delete_during_merge Tue Dec 25 16:44:53 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rentsystem..income
     *
     * @mbggenerated Tue Dec 25 16:44:53 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}